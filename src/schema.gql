scalar Timestamp

interface StandardResponse {
    status: String!
    message: String!
}

type AuthToken {
    bearer_token: String!
}

type SignInSuccessRes implements StandardResponse {
    status: String!
    message: String!
    data: AuthToken
}

type SignUpSuccessRes implements StandardResponse {
    status: String!
    message: String!
    data: SignUpData!
}

type SignOutSuccessRes implements StandardResponse {
    status: String!
    message: String!
    data: SignOutData!
}

type ForgotPasswordSuccessRes implements StandardResponse {
    status: String!
    message: String!
    data: ForgotPasswordData
}

type ResetPasswordSuccessRes implements StandardResponse {
    status: String!
    message: String!
    data: ResetPasswordData!
}

type AddFavoriteSuccessRes implements StandardResponse {
    status: String!
    message: String!
    data: CreateData!
}

type GetAllUserFavoritesSuccessRes implements StandardResponse {
    status: String!
    message: String!
    data: [GetUserFavoritesData!]!
}

type DeleteFavoriteSuccessRes implements StandardResponse {
    status: String!
    message: String!
    data: DeleteFavoriteData!
}

type AddCartSucceesRes implements StandardResponse {
    status: String!
    message: String!
    data: CreateData!
}

type GetUserCartsSucceesRes implements StandardResponse {
    status: String!
    message: String!
    data: [CartData!]!
}

type UpdateCartSuccessRes implements StandardResponse {
    status: String!
    message: String!
    data: UpdateData!
}

type RemoveCartSucceesRes implements StandardResponse {
    status: String!
    message: String!
    data: RemoveCartData!
}

type AddProductSucceesRes implements StandardResponse {
    status: String!
    message: String!
    Data: CreateData!
}

type UpdateProductSucceesRes implements StandardResponse {
    status: String!
    message: String!
    data: UpdateData!
}

type GetProductsSucceesRes implements StandardResponse {
    status: String!
    message: String!
    data: GetProductsData!
}

type GetProductSucceesRes implements StandardResponse {
    status: String!
    message: String!
    data: ProductData!
}

# Error Response Types
type InternalServerErrorRes implements StandardResponse {
    status: String!
    message: String!
    data: DataError!
}

type UnauthorizedRes implements StandardResponse {
    status: String!
    message: String!
    data: DataError!
}

type PermissionDeniedRes implements StandardResponse {
    status: String!
    message: String!
    Data: DataError!
}

type SignUpBadRequestRes implements StandardResponse {
    status: String!
    message: String!
    data: StandardBadRequestData!
}

type ResetPasswordBadRequestRes implements StandardResponse {
    status: String!
    message: String!
    data: StandardBadRequestData!
}

type ForgotPasswordBadRequestRes implements StandardResponse {
    status: String!
    message: String!
    data: StandardBadRequestData
}

type AddFavoriteBadRequestRes implements StandardResponse {
    status: String!
    message: String!
    data: StandardBadRequestData!
}

type DeleteFavoriteBadRequestRes implements StandardResponse {
    status: String!
    message: String!
    data: StandardBadRequestData!
}

type AddCartBadRequestRes implements StandardResponse {
    status: String!
    message: String!
    data: StandardBadRequestData!
}

type UpdateCartBadRequestRes implements StandardResponse {
    status: String!
    message: String!
    data: StandardBadRequestData!
}

type AddProductBadRequestRes implements StandardResponse {
    status: String!
    message: String!
    Data: StandardBadRequestData!
}

type UpdateProductBadRequestRes implements StandardResponse {
    status: String!
    message: String!
    data: StandardBadRequestData!
}

type RemoveProductSucceesRes implements StandardResponse {
    status: String!
    message: String!
    data: RemoveData!
}

type RemoveProductBadRequestRes implements StandardResponse {
    status: String!
    message: String!
    data: StandardBadRequestData!
}

type GetProductBadRequestRes implements StandardResponse {
    status: String!
    message: String!
    data: StandardBadRequestData!
}

type GetProductsData {
    page: Int!
    limit: Int!
    total_pages: Int!
    total_items: Int!
    products: [Product!]!
}

type ProductData {
    id: ID!
    name: String!
    description: String!
    stock: Int!
    is_available: Int!
    unit_price: Float!
    currency: String!
    image_url: String!
}

type Product {
    id: ID!
    name: String!
    categories: [ID!]!
    unit_price: Float!
    currency: String!
    image_url: String!
    uri: String!
}

type StandardBadRequestData {
    field: String!
}

type RemoveData {
    id: ID!
}

type SignUpData {
    id: ID!
}

type SignOutData {
    id: ID!
}

type ForgotPasswordData {
    id: ID!
}

type ResetPasswordData {
    id: ID
}

type CreateData {
    id: ID!
    created_at: Timestamp!
}

type DeleteFavoriteData {
    id: ID!
}

type RemoveCartData {
    id: ID
}

type CartData {
    id: ID
    product_id: ID
    product_name: String!
    unit_price: Float!
    currency: String!
    image_url: String!
    uri: String!
}

type UpdateData {
    id: ID!
    updated_at: Timestamp!
}

type GetUserFavoritesData {
    id: ID!
    product_id: ID!
    product_name: String!
    unit_price: Float!
    currency: String!
    image_url: String!
    uri: String!
}

type DataError {
    error: String!
}

union SignInRes = SignInSuccessRes
    | InternalServerErrorRes
union SignUpRes = SignUpSuccessRes
    | InternalServerErrorRes
    | SignUpBadRequestRes
union SignOutRes = SignOutSuccessRes
    | InternalServerErrorRes
    | UnauthorizedRes
union ForgotPasswordRes = ForgotPasswordSuccessRes
    | InternalServerErrorRes
union ResetPasswordRes = ResetPasswordSuccessRes
    | InternalServerErrorRes
    | ResetPasswordBadRequestRes
union AddFavoriteRes = AddFavoriteSuccessRes
    | AddFavoriteBadRequestRes
    | InternalServerErrorRes
    | UnauthorizedRes
union GetAllUserFavoritesRes = GetAllUserFavoritesSuccessRes
    | UnauthorizedRes
    | InternalServerErrorRes
union DeleteFavoriteRes = DeleteFavoriteSuccessRes
    | DeleteFavoriteBadRequestRes
    | UnauthorizedRes
    | InternalServerErrorRes
union AddCartRes = AddCartSucceesRes
    | AddCartBadRequestRes
    | UnauthorizedRes
    | InternalServerErrorRes
union GetUserCartsRes = GetUserCartsSucceesRes
    | InternalServerErrorRes
    | UnauthorizedRes
union UpdateCartRes = UpdateCartSuccessRes
    | UpdateCartBadRequestRes
    | InternalServerErrorRes
    | UnauthorizedRes
union RemoveCartRes = RemoveCartSucceesRes
    | UnauthorizedRes
    | InternalServerErrorRes
union AddProductRes = AddProductSucceesRes
    | AddProductBadRequestRes
    | PermissionDeniedRes
    | UnauthorizedRes
    | InternalServerErrorRes
union UpdateProductRes = UpdateProductSucceesRes
    | UpdateProductBadRequestRes
    | UnauthorizedRes
    | PermissionDeniedRes
    | InternalServerErrorRes
union RemoveProductRes = RemoveProductSucceesRes
    | RemoveProductBadRequestRes
    | UnauthorizedRes
    | PermissionDeniedRes
    | InternalServerErrorRes
union GetProductsRes = GetProductsSucceesRes
    | GetProductBadRequestRes
    | InternalServerErrorRes
union GetProductRes = GetProductSucceesRes
    | GetProductBadRequestRes
    | InternalServerErrorRes

input SignInReq {
    email: String!
    password: String!
}

input SignUpReq {
    first_name: String!
    last_name: String!
    email: String!
    address: String!
    password: String!
}

input ForgotPasswordReq {
    email: String!
}

input ResetPasswordReq {
    token: String!
    new_password: String!
}

input AddFavoriteReq {
    product_id: ID
}

input DeleteFavoriteReq {
    id: ID!
}

input AddCartReq {
    product_id: ID
    quantity: Int
}

input UpdateCartReq {
    op: String!
    path: String!
    value: Int!
}

input AddProductReq {
    product_name: String!
    description: String!
    stock: Int!
    categories: [ID!]!
    is_available: Boolean!
    image_url: String!
    unit_price: Float!
}

input UpdateProductReq {
    name: String!
    price: Float!
    description: String!
    stock: Int!
    is_available: Boolean!
}

input GetProductsReq {
    first: Int!
    after: ID!
}

type Query {
    getAllUserFavorites: GetAllUserFavoritesRes!
    getUserCarts: GetUserCartsRes!
    getProducts(req: GetProductsReq): GetProductsRes!
    getProduct(product_id: ID!): GetProductRes!

}

type Mutation {
    # Auth
    signIn(req: SignInReq!): SignInRes!
    signOut: SignOutRes!

    # User
    signUp(req: SignUpReq): SignUpRes!
    forgotPassword(req: ForgotPasswordReq): ForgotPasswordRes!
    resetPassword(req: ResetPasswordReq): ResetPasswordRes!

    # Favorites
    addFavorite(req: AddFavoriteReq): AddFavoriteRes!
    removeFavorite(req: DeleteFavoriteReq): DeleteFavoriteRes!

    # Carts
    addCart(req: AddCartReq!): AddCartRes!
    updateCart(cart_Id: ID!, req: UpdateCartReq!): UpdateCartRes!
    removeCart(cart_Id: ID!): RemoveCartRes!

    # Products
    addProduct(req: AddProductReq!): AddProductRes!
    updateProduct(product_id: ID!, req: UpdateProductReq): UpdateProductRes!
    removeProduct(product_id: ID!): RemoveProductRes!

}
